$fa-font-path: 'node_modules/~@fortawesome/fontawesome-free/webfonts';

@import 'node_modules/bootstrap/scss/bootstrap';

@import 'node_modules/@fortawesome/fontawesome-free/scss/fontawesome';

@import 'node_modules/@fortawesome/fontawesome-free/scss/solid';

@import 'node_modules/@fortawesome/fontawesome-free/scss/brands';

:root {
	--vh: 1vh;
}

body {
	max-width: 100vw;
	@extend .hide-scrollbar;

	* {
		max-width: 100%;
		line-height: 1.1em;
	}

	img {
		flex-shrink: 0;
	}

	.text-truncate {
		white-space: nowrap !important;
	}
}

h1, h2, h3 {
	font-weight: bold;
	text-transform: capitalize;
}

h4, h5, h6 {
	font-weight: 500;
	text-transform: capitalize;
}

.btn {
	padding: 0.5rem 1rem;
	display: flex;
	justify-content: center;
	align-items: center;
	font-weight: 600;
}

.label {
	font-size: 1em;
	line-height: 1.5;
	font-weight: 600;
}

.label-sm {
	font-size: 0.875rem;
	line-height: 1.5;
	font-weight: 500;
}

.form-group {
	min-width: auto;
	max-width: 100%;
}

input.form-control, textarea.form-control {
	font-size: 1.125em;
	padding: 0.75em;
}

.form-control::placeholder {
	color: inherit;
	font-size: 0.9em;
}

.form-control, .form-control:focus {
	background: inherit;
}

a {
	text-decoration: none;
	cursor: pointer;
	color: inherit;

	&:hover {
		text-decoration: none;
		// font-size: 1.02em;
		transition: all 0.2s;
		// transform: scale(1.02);
	}
}

.dropdown-menu-full {
	position: fixed;
	left: 0;
	top: 0;
	width: 100vw;
	min-height: vh(100);
}

.editor-container {
	margin-bottom: 0.5rem;

	* {
		max-width: 100%;
	}
}

.editor-body {
	p { margin-bottom: 0.25rem; }
	& > p:last-child { margin-bottom: 0; }

	* {
		word-wrap: break-word;
		word-break: break-word;
		overflow-wrap: break-word;
	}
}

div.thick {
	height: 3px;
	background: $color-line;
	margin: 1rem 0;
	max-width: unset;
}

div.thin {
	height: 1.5px;
	background: $color-line;
	margin: 0.5rem 0;
	max-width: unset;
}

.text-18 {
	font-size: 1.125rem;
}

.cursor-pointer {
	cursor: pointer;
}

/*! purgecss start ignore */
.firebase-emulator-warning {
	display: none !important;
}

@each $key, $val in $spacers {
	@each $bp, $width in $grid-breakpoints {
		$infix: breakpoint-infix($bp, $grid-breakpoints);

		body[data-no-gap='true'] .gap#{$infix}-#{$key} {
			@media (min-width: $width) {
				gap: 0 !important;

				& > *:not(:only-child) {
					margin: calc(#{$val} * 0.25);
				}
			}
		}
	}
}

.swal2-popup.swal2-toast .swal2-title { margin: 1em 0 !important; }
.swal2-popup.swal2-toast { padding: 0.5em 1em !important; }

/*! purgecss end ignore */
